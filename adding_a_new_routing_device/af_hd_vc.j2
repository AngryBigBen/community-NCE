### Core MX480

dynamic-profiles {
    {{ subscriber_profile_name }} {
        routing-instances {
            "$junos-routing-instance" {
                interface "$junos-interface-name";
            }
        }
        interfaces {
            demux0 {
                unit "$junos-interface-unit" {
                    demux-options {
                        underlying-interface "$junos-underlying-interface";
                    }
                    family inet {
                        demux-source {
                            $junos-subscriber-ip-address;
                        }
                        unnumbered-address "$junos-loopback-interface";
                    }
                }
            }
        }
    }
}
system {
    services {
        static-subscribers {
            group {{ static_subscriber_group['name'] }} {
                access-profile {
                    {{ access_profile }};
                }
                dynamic-profile {
                    junos-default-profile;
                }
                authentication {
                    password "$9$kqfz3nCpu1zFcyKvLX"; ## SECRET-DATA
                    username-include {
                        domain-name {{ static_subscriber_group ['auth_domain_name'] }};
                        user-prefix {{ static_subscriber_group ['auth_user_prefix'] }};
                    }
                }
                interface {{ static_subscriber_group ['interface'] }};
            }
        }
    }
}
access-profile {{ access_profile }};
interfaces {
    {{ nni_interface['name'] }} {
        description "Connected to data center PE router";
        hierarchical-scheduler;
        vlan-tagging;
        mtu {{ nni_interface['mtu'] }};
        unit {{ nni_interface['logical_unit'] }} {
            vlan-id {{ nni_interface['vlan_id'] }};
            family inet {
                address {{ nni_interface['inet_address'] }};
            }
            family iso;
            family mpls;
        }
    }
    {{ uni_interface['name'] }} {
        description "Connected to remote site-1 of smallCo";
        hierarchical-scheduler;
        vlan-tagging;
        mtu {{ uni_interface['mtu'] }};
        unit {{ uni_interface['logical_unit'] }} {
            demux-source inet;
            vlan-id {{ uni_interface['vlan_id'] }};
            family inet {
                address {{ uni_interface['inet_address'] }};
            }
        }
    }
    lo0 {
        unit {{ lo_interface['logical_unit'] }} {
            family inet {
                address {{ lo_interface['inet_address'] }};
            }
        }
    }
}
access {
    radius-server {
        {{ radius_server }} secret {{ radius_secret }};
    }
    profile {{ access_profile }} {
        authentication-order radius;
        authorization-order jsrc;
        provisioning-order jsrc;
        radius {
            authentication-server {{ radius_server }};
        }
    }
}
routing-instances {
    {{ routing_instance['name'] }} {
        forwarding-options {
            dhcp-relay {
                overrides {
                    proxy-mode;
                }
                server-group {
                    {{ routing_instance['dhcp_server_group'] }} {
                        {{ routing_instance['dhcp_server_group_server'] }};
                    }
                }
                active-server-group {{ routing_instance['dhcp_server_group'] }};
                group {{ routing_instance['dhcp_relay_group'] }} {
                    dynamic-profile {{ subscriber_profile_name }};
                    interface {{ uni_interface['name'] }}.{{ uni_interface['logical_unit'] }};
                    interface {{ lo_interface['name'] }}.{{ lo_interface['logical_unit'] }};
                }
            }
        }
    }
}

### Edge MX960

dynamic-profiles {
    HD-TP {
        variables {
            dst;
            src;
            forwarding;
            bandwidth;
        }
        interfaces {
            "$junos-interface-ifd-name" {
                unit "$junos-underlying-interface-unit" {
                    family inet {
                        filter {
                            input SRC_Driven_filter;
                        }
                    }
                }
            }
        }
        firewall {
            family inet {
                fast-update-filter SRC_Driven_filter {
                    interface-specific;
                    match-order [ destination-address source-address ];
                    term 1 {
                        from {
                            source-address $src;
                            destination-address $dst;
                        }
                        then {
                            policer "$bandwidth";
                            count Dynamic_Policy;
                            forwarding-class "$forwarding";
                            accept;
                        }
                    }
                    term 3 {
                        then {
                            count Background_traffic;
                            accept;
                        }
                    }
                }
            }
        }
    }
}
interfaces {
    ge-1/0/1 {
        unit 0 {
            family inet {
                filter {
                    input MC-Gold-Filter;
                }
                address 192.168.41.1/24;
                address 192.168.70.1/24;
                address 192.168.51.1/24;
            }
        }
    }
    ge-1/0/3 {
        unit 0 {
            family inet {
                filter {
                    input MC-Silver-Filter;
                }
            }
        }
    }
    ge-1/0/5 {
        unit 0 {
            family inet {
                filter {
                    input MC-Bronze-Filter;
                }
            }
        }
    }
}
class-of-service {
    classifiers {
        dscp DSCP-CLASSIFIER {
            forwarding-class NC {
                loss-priority low code-points nc;
            }
            forwarding-class MC-Gold {
                loss-priority low code-points ef;
                loss-priority medium-low code-points af41;
            }
            forwarding-class MC-Silver {
                loss-priority low code-points af42;
            }
            forwarding-class MC-Bronze {
                loss-priority high code-points be;
                loss-priority low code-points af43;
            }
        }
        exp MPLS-CLASSIFIER {
            forwarding-class NC {
                loss-priority low code-points nc;
            }
            forwarding-class MC-Gold {
                loss-priority low code-points ef;
                loss-priority medium-low code-points ef1;
            }
            forwarding-class MC-Silver {
                loss-priority low code-points af11;
            }
            forwarding-class MC-Bronze {
                loss-priority high code-points af12;
                loss-priority low code-points be;
            }
        }
        ieee-802.1 ENET-CLASSIFIER {
            forwarding-class NC {
                loss-priority low code-points nc;
            }
            forwarding-class MC-Gold {
                loss-priority low code-points ef;
                loss-priority medium-low code-points ef1;
            }
            forwarding-class MC-Silver {
                loss-priority low code-points af11;
            }
            forwarding-class MC-Bronze {
                loss-priority high code-points af12;
                loss-priority low code-points be;
            }
        }
    }
    code-point-aliases {
        dscp {
            be 000000;
            af41 100010;
            af42 100110;
            af43 100110;
            ef 101110;
            nc 110000;
        }
        exp {
            be 000;
            af11 100;
            af12 101;
            ef 010;
            ef1 011;
            nc 110;
        }
        ieee-802.1 {
            be 000;
            af11 100;
            af12 101;
            ef 010;
            ef1 011;
            nc 110;
        }
    }
    drop-profiles {
        NC-DROP {
            interpolate {
                fill-level 100;
                drop-probability 0;
            }
        }
        EF-DROP {
            interpolate {
                fill-level 100;
                drop-probability 0;
            }
        }
        MC-Gold-DROP {
            interpolate {
                fill-level 100;
                drop-probability 0;
            }
        }
        MC-Silver-DROP {
            interpolate {
                fill-level 100;
                drop-probability 0;
            }
        }
        MC-Bronze-DROP {
            interpolate {
                fill-level [ 80 90 100 ];
                drop-probability [ 20 50 100 ];
            }
        }
        BE-DATA-DROP {
            interpolate {
                fill-level [ 5 25 50 75 80 100 ];
                drop-probability [ 10 40 60 80 90 100 ];
            }
        }
    }
    forwarding-classes {
        queue 0 MC-Bronze;
        queue 2 MC-Silver;
        queue 1 MC-Gold;
        queue 3 NC;
    }
    traffic-control-profiles {
        CORE-MAP {
            scheduler-map SCHED-MAP;
        }
        ACCESS-MAP {
            scheduler-map SCHED-MAP;
            guaranteed-rate 50m;
        }
    }
    interfaces {
    {%- for interface_name in core_interfaces %}
        {{ interface_name }} {
            output-traffic-control-profile CORE-MAP;
            unit * {
                classifiers {
                    dscp DSCP-CLASSIFIER;
                }
                rewrite-rules {
                    dscp DSCP-RW;
                }
            }
        }
    {%- endfor %}
    {%- for interface_name in access_interfaces %}
        {{ interface_name }} {
            unit * {
                output-traffic-control-profile ACCESS-MAP;
                classifiers {
                    dscp DSCP-CLASSIFIER;
                }
                rewrite-rules {
                    dscp DSCP-RW;
                }
            }
        }
    {%- endfor %}
    }
    rewrite-rules {
        dscp DSCP-RW {
            forwarding-class NC {
                loss-priority low code-point nc;
            }
            forwarding-class MC-Gold {
                loss-priority low code-point af41;
            }
            forwarding-class MC-Silver {
                loss-priority low code-point af42;
            }
            forwarding-class MC-Bronze {
                loss-priority low code-point be;
            }
        }
        exp MPLS-CLASSIFIER {
            forwarding-class NC {
                loss-priority low code-point nc;
            }
            forwarding-class MC-Gold {
                loss-priority low code-point ef1;
            }
            forwarding-class MC-Silver {
                loss-priority low code-point af11;
            }
            forwarding-class MC-Bronze {
                loss-priority low code-point af12;
            }
        }
        ieee-802.1 ENET-CLASSIFIER {
            forwarding-class NC {
                loss-priority low code-point nc;
            }
            forwarding-class MC-Gold {
                loss-priority low code-point ef;
                loss-priority medium-low code-point ef1;
            }
            forwarding-class MC-Silver {
                loss-priority low code-point af11;
            }
            forwarding-class MC-Bronze {
                loss-priority low code-point be;
            }
        }
    }
    scheduler-maps {
        SCHED-MAP {
            forwarding-class MC-Bronze scheduler MC-Bronze-SCHED;
            forwarding-class MC-Silver scheduler MC-Silver-SCHED;
            forwarding-class MC-Gold scheduler MC-Gold-SCHED;
            forwarding-class NC scheduler NC;
        }
    }
    schedulers {
        NC {
            drop-profile-map loss-priority low protocol any drop-profile NC-DROP;
        }
        MC-Gold-SCHED {
            priority high;
            drop-profile-map loss-priority medium-low protocol any drop-profile MC-Gold-DROP;
            drop-profile-map loss-priority low protocol any drop-profile EF-DROP;
        }
        MC-Silver-SCHED {
            drop-profile-map loss-priority low protocol any drop-profile MC-Silver-DROP;
        }
        MC-Bronze-SCHED {
            transmit-rate {
                remainder;
            }
            drop-profile-map loss-priority low protocol any drop-profile MC-Bronze-DROP;
            drop-profile-map loss-priority high protocol any drop-profile BE-DATA-DROP;
        }
    }
}
firewall {
    family inet {
        filter MC-Gold-Filter {
            term 1 {
                then {
                    count ALL;
                    log;
                    loss-priority medium-low;
                    forwarding-class MC-Gold;
                    accept;
                }
            }
        }
        filter MC-Silver-Filter {
            term 1 {
                then {
                    count ALL;
                    log;
                    loss-priority medium-low;
                    forwarding-class MC-Silver;
                    accept;
                }
            }
        }
        filter MC-Bronze-Filter {
            term 1 {
                then {
                    count ALL;
                    log;
                    loss-priority medium-low;
                    forwarding-class MC-Silver;
                    accept;
                }
            }
        }
    }
    policer 2.4MB {
        if-exceeding {
            bandwidth-limit 2400000;
            burst-size-limit 2800000;
        }
        then discard;
    }
    policer 512k {
        if-exceeding {
            bandwidth-limit 512k;
            burst-size-limit 768k;
        }
        then discard;
    }
    policer 1MB {
        if-exceeding {
            bandwidth-limit 1024000;
            burst-size-limit 1200000;
        }
        then discard;
    }
}
diameter {
    origin {
        realm {{ diameter_realm }};
        host {{ diameter_origin_host }};
    }
    network-element {{ diameter_network_element }} {
        peer {{ diameter_peer_name }} {
            priority 1;
        }
        forwarding {
            route r1 {
                function jsrc partition p1;
                destination realm {{ diameter_realm }} host {{ diameter_peer_name }};
                metric 1;
            }
        }
    }
    peer {{ diameter_peer_name }} {
        address {{ diameter_peer_ip }};
        connect-actively;
    }
}
